1.辗转相除法（欧几里德算法）
319÷377=0（余319）
（319，377）=（377，319）；
 377÷319=1（余58）
（377，319）=（319，58）；
 319÷58=5（余29）
 （319，58）=（58，29）；
 58÷29=2（余0）
 （58，29）= 29；
（319，377）=29。

int GCD(int a,int b)  //a>b
{
    return a%b?GCD(b,a%b):b;
}

2.更相减损法
（260,104）=>（65,26）
65-26=39
39-26=13
26-13=13

3.它们的最大公约数*它们的最小公倍数=它们的乘积。

4.Stein算法
int gcd(unsigned int x,unsigned int y)
{
    if(y>x)
        return gcd(y,x);
    if(!y)
        return x;
    if(!(x&1))
    {
        if(!(y&1))
          return gcd(x>>1,y>>1)<<1;
        else
          return gcd(x>>1,y);
    }
    else
    {
        if(!(y&1))
            return gcd(x,y>>1);
        else
            return gcd((x-y)>>1,y);
    }
}